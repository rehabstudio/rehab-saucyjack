{"version":3,"sources":["../src/saucy-jack.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["export class SaucyJack {\n    constructor(options = {}) {\n\n        /**\n         * @property {Object} DEBUG -  Show the scroll line on the screen.\n         * @property {Object} TRIGGER_LINE_POS - Percentile Y co-ordinate (from 0 to 1) where the imaginary trigger\n         * line is in the viewport. Entities get 'triggered' when their top edge hits this line.\n         * @property {Object} ENTITY_SELECTOR - A selector that we will grab on init to set up the list of elements to\n         * watch\n         * @property {Object} ACTIVE_CLASS - The class we give any watched element when it goes over the trigger line.\n         * @property {Object} INVERT_BEHAVIOUR - If true, the class is removed instead of added when it crosses the\n         * line, and vice versa.  Good for 'release'-style transitions-in.\n         */\n        const defaults = {\n            DEBUG: false,\n            TRIGGER_LINE_POS: 0.85,\n            ENTITY_SELECTOR: '.saucy-el',\n            ACTIVE_CLASS: 'saucy-active',\n            INVERT_BEHAVIOUR: false,\n            TRIGGER_POS: 'top'\n        };\n\n        // Checking if the passed 'options' param is an object. If its not then set it to the defaults.\n        if (options instanceof Object || !(options instanceof Array)) {\n            for (var key in defaults) {\n                options[key] = options[key] ? options[key] : defaults[key];\n            }\n\n        } else {\n            options = defaults;\n        }\n\n        this.options = options;\n\n        this._entities = [];\n        this._triggerLinePixelPos = 0;\n        this._scrollPos = 0;\n        this._debugEl = null;\n\n        var els = document.querySelectorAll(this.options.ENTITY_SELECTOR);\n        for (var i = 0, ln = els.length; i < ln; i++) {\n            this.addElement(els[i]);\n        }\n\n        this._getScrollPos();\n        this._updateTriggerLine();\n        this._updateEntities();\n\n        // Set the debug line if DEBUG is set true\n        const debugStyle = {\n            'position': 'fixed',\n            'left': '0',\n            'width': '100%',\n            'height': '0px',\n            'borderTop': '2px dashed red',\n            'zIndex': '999999',\n            'opacity': '0.2'\n        };\n\n        if (this.options.DEBUG) {\n            this._debugEl = document.createElement('div');\n            this._debugEl.classList.add('saucy-debug');\n            document.body.appendChild(this._debugEl);\n\n            for (var prop in debugStyle) {\n                this._debugEl.style[prop] = debugStyle[prop];\n            }\n\n            this._updateDebugEl();\n        }\n\n        window.addEventListener('resize', this._onResize.bind(this), false);\n        window.addEventListener('scroll', this._onScroll.bind(this), false);\n    }\n\n    // Get the triggered (top, bottom, center) edge positions of the entities on the page.\n    _updateEntities() {\n        var triggerPos = this.options.TRIGGER_POS;\n\n        this._entities.forEach(function(ent) {\n            var boundingClient = ent.el.getBoundingClientRect();\n\n            if (triggerPos === 'center') {\n                ent.yTop = boundingClient.top + boundingClient.height * 0.5;\n            } else {\n                ent.yTop = boundingClient[triggerPos];\n            }\n\n            // TODO: check if element is 'in range' and ignore if it isn't\n\n            var isActive = (this._triggerLinePixelPos > ent.yTop);\n            this._setActiveStatus(ent, isActive);\n        }.bind(this));\n    }\n\n    // Update the current scroll position (the top of the viewport).\n    _getScrollPos() {\n        this._scrollPos =\n            window.scrollY || ((window.pageYOffset || document.body.scrollTop) - (document.body.clientTop || 0));\n    }\n\n    // Work out the actual pixel position of the 'trigger line' based on the viewport\n    // size and the trigger percentage.\n    _updateTriggerLine() {\n        this._triggerLinePixelPos =\n            Math.round((window.innerHeight || document.documentElement.clientHeight) * this.options.TRIGGER_LINE_POS);\n    }\n\n    // Add or remove the active attribute and class for the entity.\n    _setActiveStatus(ent, isActive) {\n        if (typeof isActive !== 'boolean') {\n            isActive = true;\n        }\n        if (ent.active === isActive) {\n            return;\n        }\n\n        ent.active = isActive;\n        var fn = (isActive && !this.options.INVERT_BEHAVIOUR) ? 'add' : 'remove';\n        ent.el.classList[fn](this.options.ACTIVE_CLASS);\n    }\n\n    // Callback for the resize event. Re-calcs the positions of our entities.\n    // NICETOHAVE: debounce\n    _onResize() {\n        this._updateTriggerLine();\n        this._updateEntities();\n        if (this.options.DEBUG) {\n            this._updateDebugEl();\n        }\n    }\n\n    // Callback for the resize event. Iterates the entities and add/removes the 'active'\n    // status if they've gone over the trigger line.\n    _onScroll() {\n        this._getScrollPos();\n        this._updateEntities();\n        if (this.options.DEBUG) {\n            this._updateDebugEl();\n        }\n    }\n\n    // Updates the debug el.\n    _updateDebugEl() {\n        this._debugEl.style.top = this._triggerLinePixelPos + 'px';\n    }\n\n    // Add a wrapper object for an element to our 'watch list' for later use.\n    // NICETOHAVE: de-duplicate\n    addElement(el) {\n        var elObj = {\n            el: el,\n            yTop: 0,\n            active: false\n        };\n        this._entities.push(elObj);\n    }\n}\n"]}