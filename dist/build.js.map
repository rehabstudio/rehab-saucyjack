{"version":3,"sources":["../src/saucy-jack.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["export class SaucyJack {\n    constructor(options = {}) {\n\n        /**\n         * @property {Object} DEBUG -  Show the scroll line on the screen.\n         * @property {Object} TRIGGER_LINE_POS - Percentile Y co-ordinate (from 0 to 1) where the imaginary trigger\n         * line is in the viewport. Entities get 'triggered' when their top edge hits this line.\n         * @property {Object} ENTITY_SELECTOR - A selector that we will grab on init to set up the list of elements to\n         * watch\n         * @property {Object} ACTIVE_CLASS - The class we give any watched element when it goes over the trigger line.\n         * @property {Object} INVERT_BEHAVIOUR - If true, the class is removed instead of added when it crosses the\n         * line, and vice versa.  Good for 'release'-style transitions-in.\n         */\n        const defaults = {\n            DEBUG: false,\n            TRIGGER_LINE_POS: 0.85,\n            ENTITY_SELECTOR: '.saucy-el',\n            ACTIVE_CLASS: 'saucy-active',\n            INVERT_BEHAVIOUR: false\n        };\n\n        // Checking if the passed 'options' param is an object. If its not then set it to the defaults.\n        if (options instanceof Object || !(options instanceof Array)) {\n            options.DEBUG =  options.DEBUG ? options.DEBUG : defaults.DEBUG;\n            options.TRIGGER_LINE_POS = options.TRIGGER_LINE_POS ? options.TRIGGER_LINE_POS : defaults.TRIGGER_LINE_POS;\n            options.ENTITY_SELECTOR = options.ENTITY_SELECTOR ? options.ENTITY_SELECTOR : defaults.ENTITY_SELECTOR;\n            options.ACTIVE_CLASS = options.ACTIVE_CLASS ? options.ACTIVE_CLASS : defaults.ACTIVE_CLASS;\n            options.INVERT_BEHAVIOUR = options.INVERT_BEHAVIOUR ? options.INVERT_BEHAVIOUR : defaults.INVERT_BEHAVIOUR;\n        } else {\n            options = defaults;\n        }\n\n        this.options = options;\n\n        this._entities = [];\n        this._triggerLinePixelPos = 0;\n        this._scrollPos = 0;\n        this._debugEl = null;\n\n        var els = document.querySelectorAll(this.options.ENTITY_SELECTOR);\n        for (var i = 0, ln = els.length; i < ln; i++) {\n            this.addElement(els[i]);\n        }\n\n        this._getScrollPos();\n        this._updateTriggerLine();\n        this._updateEntities();\n\n        if (this.options.DEBUG) {\n            this._debugEl = document.createElement('div');\n            this._debugEl.classList.add('saucy-debug');\n            document.body.appendChild(this._debugEl);\n            this._updateDebugEl();\n        }\n\n        window.addEventListener('resize', this._onResize.bind(this), false);\n        window.addEventListener('scroll', this._onScroll.bind(this), false);\n    }\n\n    // Get the top edge positions of the entities on the page.\n    // NICETOHAVE: allow for triggering from the center or bottom edge of the el,\n    // not just from the top.\n    _updateEntities() {\n        this._entities.forEach(function(ent) {\n            ent.yTop = ent.el.getBoundingClientRect().top;\n\n            // TODO: check if element is 'in range' and ignore if it isn't\n\n            var isActive = (this._triggerLinePixelPos > ent.yTop);\n            this._setActiveStatus(ent, isActive);\n        }.bind(this));\n    }\n\n    // Update the current scroll position (the top of the viewport).\n    _getScrollPos() {\n        this._scrollPos =\n            window.scrollY || ((window.pageYOffset || document.body.scrollTop) - (document.body.clientTop || 0));\n    }\n\n    // Work out the actual pixel position of the 'trigger line' based on the viewport\n    // size and the trigger percentage.\n    _updateTriggerLine() {\n        this._triggerLinePixelPos =\n            Math.round((window.innerHeight || document.documentElement.clientHeight) * this.options.TRIGGER_LINE_POS);\n    }\n\n    // Add or remove the active attribute and class for the entity.\n    _setActiveStatus(ent, isActive) {\n        if (typeof isActive !== 'boolean') {\n            isActive = true;\n        }\n        if (ent.active === isActive) {\n            return;\n        }\n\n        ent.active = isActive;\n        var fn = (isActive && !this.options.INVERT_BEHAVIOUR) ? 'add' : 'remove';\n        ent.el.classList[fn](this.options.ACTIVE_CLASS);\n    }\n\n    // Callback for the resize event. Re-calcs the positions of our entities.\n    // NICETOHAVE: debounce\n    _onResize() {\n        this._updateTriggerLine();\n        this._updateEntities();\n        if (this.options.DEBUG) {\n            this._updateDebugEl();\n        }\n    }\n\n    // Callback for the resize event. Iterates the entities and add/removes the 'active'\n    // status if they've gone over the trigger line.\n    _onScroll() {\n        this._getScrollPos();\n        this._updateEntities();\n        if (this.options.DEBUG) {\n            this._updateDebugEl();\n        }\n    }\n\n    // Updates the debug el.\n    _updateDebugEl() {\n        this._debugEl.style.top = this._triggerLinePixelPos + 'px';\n    }\n\n    // Add a wrapper object for an element to our 'watch list' for later use.\n    // NICETOHAVE: de-duplicate\n    addElement(el) {\n        var elObj = {\n            el: el,\n            yTop: 0,\n            active: false\n        };\n        this._entities.push(elObj);\n    }\n}\n"]}